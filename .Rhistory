setwd("/project/hfa_work/ceraolo/theco")
install.packages("nparcomp")
library(nparcomp)
library(nparcomp)
?mctp
"/project/hfa_work/ceraolo/theco/tables/exon_counts"
paste(c("a","b"))
paste("a","b")
paste("a","b",sep="")
paste0("exon_count_","IR",".csv")
event_types=c("IR","ES","5AS","3AS")
for (t in event_types){
paste0("exon_count_",t,".csv")
}
for (t in event_types){
print(paste0("exon_count_",t,".csv"))
}
print(paste0("exon_count_",t,".csv"))
for (t in event_types) {
print(paste0("exon_count_",t,".csv"))
}
ensemble<-list()
ensemble
ensemble[[1]]<-1
ensemble
ensemble[[4]]<-4
ensemble
for (t in event_types) {
fname<-paste0(datadir,"exon_count_",t,".csv")
print(fname)
}
data_dir<-"/project/hfa_work/ceraolo/theco/tables/exon_counts/"
event_types=c("IR","ES","5AS","3AS")
ensemble<-list()
for (t in event_types) {
fname<-paste0(datadir,"exon_count_",t,".csv")
print(fname)
}
for (t in event_types) {
fname<-paste0(data_dir,"exon_count_",t,".csv")
print(fname)
}
names(ensemble)<-event_types
for (i in 1:5) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,".csv")
print(fname)
}
?list
for (i in 1:5) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,".csv")
ensemble[[i]]<-read.csv(fname)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,".csv")
ensemble[[i]]<-read.csv(fname)
}
names(ensemble)<-event_types
ensemble
ensemble.IR
ensemble["IR"]
head(ensemble["IR"])
typeof(ensemble["IR"])
typeof(ensemble[["IR"]])
typeof(ensemble[["IR"]])
typeof(ensemble[[1]])
class(ensemble[[1]])
class(ensemble[1])
class(ensemble$IR)
ensemble$IR
ensemble$IR$type
ensemble$IR$type<-"IR"
ensemble$IR$type
ensemble$IR
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,".csv")
ensemble[[i]]<-read.csv(fname)
ensemble[[i]]$type<-t
}
names(ensemble)<-event_types
ensemble$IR$type
ensemble$ES$type
library(dplyr)
library(dplyr)
?bind_rows
bind_rows(ensemble)
df<-bind_rows(ensemble)
nrow(df)
nrow(ensemble)
v<-c()
for (i in 1:4) {
v<-c(v,nrow(ensemble[[i]]))
}
v
sum(v)
tissue<-NULL
tissue is NULL
tissue == NULL
tissue != NULL
print(fname)
NaN
NaN == NaN
NA
NA == NA
"a"+"b"
"a"*"b"
c("a","b")
read.exontable<-function(sample=""){
if (sample!="") {
sample<-paste0("_",sample)
}
return(sample)
}
sample.type<-paste0("_",sample.type)
read.exontable<-function(sample.type=""){
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
return(sample.type)
}
read.exontable()
read.exontable(sample.type = "cell_line")
read.exontable<-function(sample.type=""){
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,sample.type,".csv")
print(fname)
#ensemble[[i]]<-read.csv(fname)
#ensemble[[i]]$type<-t
}
return(sample.type)
}
read.exontable(sample.type = "cell_line")
read.exontable()
read.exontable<-function(sample.type=""){
data_dir<-"/project/hfa_work/ceraolo/theco/tables/exon_counts/"
event_types=c("IR","ES","5AS","3AS")
ensemble<-list()
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,sample.type,".csv")
print(fname)
ensemble[[i]]<-read.csv(fname)
ensemble[[i]]$type<-t
}
names(ensemble)<-event_types
df<-bind_rows(ensemble)
return(df)
}
read.exontable()
nrow(read.exontable())
read.exontable<-function(sample.type=""){
data_dir<-"/project/hfa_work/ceraolo/theco/tables/exon_counts/"
event_types=c("IR","ES","5AS","3AS")
df.l<-list()
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,sample.type,".csv")
df.l[[i]]<-read.csv(fname)
df.l[[i]]$type<-t
}
names(df.l)<-event_types
df<-bind_rows(df.l)
return(df)
}
nrow(read.exontable())
ensemble<-read.exontable()
colnames(ensemble)
?mctp
read.exontable<-function(sample.type=""){
data_dir<-"/project/hfa_work/ceraolo/theco/tables/exon_counts/"
event_types=c("IR","ES","5AS","3AS")
df.l<-list()
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,sample.type,".csv")
df.l[[i]]<-read.csv(fname)
df.l[[i]]$type<-t
}
names(df.l)<-event_types
df<-bind_rows(df.l)
df.type<-factor(df.type)
return(df)
}
ensemble<-read.exontable()
read.exontable<-function(sample.type=""){
data_dir<-"/project/hfa_work/ceraolo/theco/tables/exon_counts/"
event_types=c("IR","ES","5AS","3AS")
df.l<-list()
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,sample.type,".csv")
df.l[[i]]<-read.csv(fname)
df.l[[i]]$type<-t
}
names(df.l)<-event_types
df<-bind_rows(df.l)
df$type<-factor(df$type)
return(df)
}
ensemble<-read.exontable()
colnames(ensemble)
mctp(n_ex_d~type)
mctp(n_ex_d~type,data=ensemble)
ensemble.test<-mctp(n_ex_d~type,data=ensemble)
ensemble.test$Analysis
ensemble.test<-mctp(n_ex_d~type,data=ensemble,asy.method = "mult.t")
ensemble.test$Analysis
ensemble.test$Data.Info
ensemble.test<-mctp(n_ex_d~type,data=ensemble)
summary.mctp(ensemble.test)
summary(ensemble.test)
plot(ensemble.test)
cell_line<-read.exontable(sample.type = "cell_line")
cell.line.test<-mctp(n_ex_d~type,data=cell.line)
cell.line<-read.exontable(sample.type = "cell_line")
cell.line.test<-mctp(n_ex_d~type,data=cell.line)
summary(cell.line.test)
plot(cell.line.test)
tissue<-read.exontable(sample.type = "tissue")
tissue.test<-mctp(n_ex_d~type,data=tissue)
summary(tissue.test)
plot(tissue.test)
primary.cells<-read.exontable(sample.type = "primary_cell")
primary.cells.test<-mctp(n_ex_d~type,data=primary.cells)
summary(primary.cells.test)
plot(primary.cells.test)
in.vitro<-read.exontable(sample.type = "in_vitro_differentiated")
in.vitro<-read.exontable(sample.type = "in_vitro_differentiated_cells")
in.vitro.test<-mctp(n_ex_d~type,data=in.vitro)
summary(in.vitro.test)
plot(in.vitro.test)
library(nparcomp)
library(dplyr)
library(splitstackshape)
library(MASS)
?mctp
read.exontable<-function(sample.type=""){
data_dir<-"/project/hfa_work/ceraolo/theco/tables/exon_counts/"
event_types=c("IR","ES","5AS","3AS")
df.l<-list()
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,sample.type,".csv")
df.l[[i]]<-read.csv(fname)
df.l[[i]]$type<-t
}
names(df.l)<-event_types
df<-bind_rows(df.l)
df$type<-factor(df$type)
df<-expandRows(df,"coverage")
return(df)
}
filter.df<-function(df){
df[df$n_ex>=3,]
}
odds<-function(p1,p2){
(p1/(1-p1))/(p2/(1-p2))
}
ensemble<-read.exontable()
ensemble.filtered
ensemble.filtered<-filter.df(ensemble)
ensemble.filtered
ensemble.filtered$n_ex_u
ensemble.filtered$n_ex_u/ensemble.filtered$n_ex_d
(ensemble.filtered$n_ex_u+1)/(ensemble.filtered$n_ex_d+1)
ensemble.filtered$ud<-(ensemble.filtered$n_ex_u+1)/(ensemble.filtered$n_ex_d+1)
View(ensemble)
ggplot(data=ensemble.filtered,aes(x=ud))
library(ggplot2)
ggplot(data=ensemble.filtered,aes(x=ud))
ggplot(data=ensemble.filtered,aes(x=ud))+
geom_density()
ggplot(data=ensemble.filtered,aes(x=log2(ud)))+
geom_density()
ensemble.filtered
ggplot(data=ensemble.filtered,aes(x=log2(ud),color=type))+
geom_density()
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density()
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6)+
facet_grid(.~type)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6)+
facet_grid(type~.)
?geom_density
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=2)+
facet_grid(type~.)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=1)+
facet_grid(type~.)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=0.1)+
facet_grid(type~.)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=0.3)+
facet_grid(type~.)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=0.2)+
facet_grid(type~.)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=0.18)+
facet_grid(type~.)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=0.15)+
facet_grid(type~.)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=0.16)+
facet_grid(type~.)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=0.16)+
facet_grid(type~.)
ggplot(data=ensemble.filtered,aes(x=log2(ud),fill=type))+
geom_density(alpha=0.6,bw=0.16)
gc()
ud.test<-mctp(ud~type,data=ensemble.filtered)
library(nparcomp)
library(dplyr)
library(splitstackshape)
library(MASS)
library(ggplot2)
?mctp
read.exontable<-function(sample.type=""){
data_dir<-"/project/hfa_work/ceraolo/theco/tables/exon_counts/"
event_types=c("IR","ES","5AS","3AS")
df.l<-list()
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,sample.type,".csv")
df.l[[i]]<-read.csv(fname)
df.l[[i]]$type<-t
}
names(df.l)<-event_types
df<-bind_rows(df.l)
df$type<-factor(df$type)
df<-expandRows(df,"coverage")
return(df)
}
filter.df<-function(df){
df[df$n_ex>=3,]
}
odds<-function(p1,p2){
(p1/(1-p1))/(p2/(1-p2))
}
ensemble<-read.exontable()
ensemble.filtered<-filter.df(ensemble)
ensemble.filtered$ud<-(ensemble.filtered$n_ex_u+1)/(ensemble.filtered$n_ex_d+1)
ud.test<-mctp(ud~type,data=ensemble.filtered)
summary(ud.test)
plot(ud.test)
ud.test$Analysis
ud.test$Data.Info$Effect
odds(ud.test$Data.Info$Effect)
ud.test$Data.Info$Effect
ud.test$Data.Info
82.61/4
82.61-76
661/8
661-76
585/7
585-(82*3)
339/3
661-76
585/7
84*3+82*3+83
84*3+82*3+84
84*4+82*3
84*5+82*3
84*5+82*2
84*5+82+83
84*5+83+82+76
library(nparcomp)
library(dplyr)
library(splitstackshape)
library(MASS)
library(ggplot2)
?mctp
read.exontable<-function(sample.type=""){
data_dir<-"/project/hfa_work/ceraolo/theco/tables/exon_counts/"
event_types=c("IR","ES","5AS","3AS")
df.l<-list()
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,sample.type,".csv")
df.l[[i]]<-read.csv(fname)
df.l[[i]]$type<-t
}
names(df.l)<-event_types
df<-bind_rows(df.l)
df$type<-factor(df$type)
df<-expandRows(df,"coverage")
return(df)
}
filter.df<-function(df){
df[df$n_ex>=3,]
}
odds<-function(p1,p2){
(p1/(1-p1))/(p2/(1-p2))
}
ensemble<-read.exontable()
library(nparcomp)
library(dplyr)
library(splitstackshape)
library(MASS)
library(ggplot2)
?mctp
read.exontable<-function(sample.type=""){
data_dir<-"/project/hfa_work/ceraolo/theco/tables/exon_counts/"
event_types=c("IR","ES","5AS","3AS")
df.l<-list()
if (sample.type!="") {
sample.type<-paste0("_",sample.type)
}
for (i in 1:4) {
t<-event_types[i]
fname<-paste0(data_dir,"exon_count_",t,sample.type,".csv")
df.l[[i]]<-read.csv(fname)
df.l[[i]]$type<-t
}
names(df.l)<-event_types
df<-bind_rows(df.l)
df$type<-factor(df$type)
df<-expandRows(df,"coverage")
return(df)
}
filter.df<-function(df){
df[df$n_ex>=3,]
}
odds<-function(p1,p2){
(p1/(1-p1))/(p2/(1-p2))
}
ensemble<-read.exontable()
ensemble.filtered<-filter.df(ensemble)
ensemble.filtered$ud<-(ensemble.filtered$n_ex_u+1)/(ensemble.filtered$n_ex_d+1)
ud.test<-mctp(ud~type,data=ensemble.filtered)
fractions(round(odds(0.5621490,0.4770922),2))
log2(odds(0.5621490,0.4770922))
summary(ud.test)
ud.test$Data.Info
odds(0.5662993,0.4707851) # IR,ES
log2(odds(0.5662993,0.4707851)) # IR,ES
log2(odds(0.5662993,0.4707851)) # IR,ES
log2(odds(0.5662993,0.4408684)) # IR,5AS
log2(odds(0.5662993,0.5220473)) # IR,3AS
